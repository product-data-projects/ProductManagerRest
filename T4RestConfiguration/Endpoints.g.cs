

// this file is autogenerated. do not make changes manually
using Microsoft.AspNetCore.Mvc;
using ProductManagerDatabase.Database;

namespace ProductManagerRest.GeneratedEndpoints
{

    public static partial class Config
    {
        public static void ConfigureMinimalApi(WebApplication app)
        {

            ConfigureRouteGroup<ManufacturerProduct>(app.MapGroup("/ManufacturerProduct").WithTags("ManufacturerProduct"));
            ConfigureRouteGroup<ProductManagerDatabase.Database.Products.Brand>(app.MapGroup("/Brand").WithTags("Brand"));
            ConfigureRouteGroup<ProductManagerDatabase.Database.Products.Cycle>(app.MapGroup("/Cycle").WithTags("Cycle"));
            ConfigureRouteGroup<ProductManagerDatabase.Database.Products.DataPoint>(app.MapGroup("/DataPoint").WithTags("DataPoint"));
            ConfigureRouteGroup<ProductManagerDatabase.Database.Products.Manufacturer>(app.MapGroup("/Manufacturer").WithTags("Manufacturer"));
            ConfigureRouteGroup<ProductManagerDatabase.Database.Products.Product>(app.MapGroup("/Product").WithTags("Product"));
            ConfigureRouteGroup<ProductManagerDatabase.Database.Products.ProductDataPoint>(app.MapGroup("/ProductDataPoint").WithTags("ProductDataPoint"));
            ConfigureRouteGroup<ProductManagerDatabase.Database.Products.ProductStage>(app.MapGroup("/ProductStage").WithTags("ProductStage"));
            ConfigureRouteGroup<ProductManagerDatabase.Database.Products.Range>(app.MapGroup("/Range").WithTags("Range"));
            ConfigureRouteGroup<ProductManagerDatabase.Database.Products.Stage>(app.MapGroup("/Stage").WithTags("Stage"));
            ConfigureRouteGroup<ProductManagerDatabase.Database.Products.Status>(app.MapGroup("/Status").WithTags("Status"));
            ConfigureRouteGroup<ProductManagerDatabase.Database.Products.Tag>(app.MapGroup("/Tag").WithTags("Tag"));
            ConfigureRouteGroup<ProductManagerDatabase.Database.Products.Taxonomy>(app.MapGroup("/Taxonomy").WithTags("Taxonomy"));
            ConfigureRouteGroup<ProductTag>(app.MapGroup("/ProductTag").WithTags("ProductTag"));


        }

        public static void ConfigureRouteGroup<T>(RouteGroupBuilder routeGroupBuilder)
        {
            routeGroupBuilder.MapGet("/", GetAll<T>);
            routeGroupBuilder.MapGet("/{id}", Get<T>);
            routeGroupBuilder.MapPost("/create", Create<T>);
            routeGroupBuilder.MapPut("/update/{id}", Update<T>);
            routeGroupBuilder.MapDelete("/delete/{id}", Delete<T>);
        }

        static partial void GetAll<T>([FromServices] ProductManagerContext dbContext);
        static partial void Get<T>(int id, [FromServices] ProductManagerContext dbContext);
        static partial void Create<T>([FromBody] T entity);
        static partial void Update<T>([FromBody] T entity);
        static partial void Delete<T>(int id, [FromServices] ProductManagerContext dbContext);

    }

}