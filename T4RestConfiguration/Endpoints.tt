<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Runtime" #>
<#@ assembly name="C:\Users\rogue\source\repos\product-data-projects\ProductManager-main\ProductManagerDatabase\bin\Debug\net6.0\ProductManagerDatabase.dll" #>
<#@ assembly name="%userprofile%\.nuget\packages\microsoft.entityframeworkcore\7.0.7\lib\net6.0\Microsoft.EntityFrameworkCore.dll" #>
<#@ assembly name="%userprofile%\.nuget\packages\microsoft.extensions.dependencyinjection\7.0.0\lib\net6.0\Microsoft.Extensions.DependencyInjection.dll" #>
<#@ assembly name="%userprofile%\.nuget\packages\microsoft.extensions.dependencyinjection.abstractions\7.0.0\lib\net6.0\Microsoft.Extensions.DependencyInjection.Abstractions.dll" #>
<#@ assembly name="%userprofile%\.nuget\packages\microsoft.entityframeworkcore.abstractions\7.0.7\lib\net6.0\Microsoft.EntityFrameworkCore.Abstractions.dll" #>
<#@ assembly name="%userprofile%\.nuget\packages\microsoft.extensions.caching.abstractions\7.0.0\lib\net6.0\Microsoft.Extensions.Caching.Abstractions.dll" #>
<#@ assembly name="%userprofile%\.nuget\packages\microsoft.entityframeworkcore.sqlserver\7.0.7\lib\net6.0\Microsoft.EntityFrameworkCore.SqlServer.dll" #>
<#@ assembly name="%userprofile%\.nuget\packages\microsoft.entityframeworkcore.relational\7.0.7\lib\net6.0\Microsoft.EntityFrameworkCore.Relational.dll" #>
<#@ assembly name="%userprofile%\.nuget\packages\microsoft.extensions.logging\7.0.0\lib\net6.0\Microsoft.Extensions.Logging.dll" #>
<#@ assembly name="%userprofile%\.nuget\packages\microsoft.extensions.caching.memory\7.0.0\lib\net6.0\Microsoft.Extensions.Caching.Memory.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".txt" #>

<#
    // T4 logic
    var db = new ProductManagerDatabase.Database.ProductManagerContext();
    var model = db.Model;

#>

// this file is autogenerated. do not make changes manually
using Microsoft.AspNetCore.Mvc;
using <#= db.GetType().Namespace #>;

namespace ProductManagerRest.GeneratedEndpoints
{

    public static partial class Config
    {
        public static void ConfigureMinimalApi(WebApplication app)
        {

<#

foreach(var p in model.GetEntityTypes())
{
    var groupName = p.ShortName() + "Group";

#>
            ConfigureRouteGroup<<#= p.Name #>>(app.MapGroup("/<#= p.ShortName() #>").WithTags("<#= p.ShortName() #>"));
<#
   
}
#>


        }

        public static void ConfigureRouteGroup<T>(RouteGroupBuilder routeGroupBuilder)
        {
            routeGroupBuilder.MapGet("/", GetAll<T>);
            routeGroupBuilder.MapGet("/{id}", Get<T>);
            routeGroupBuilder.MapPost("/create", Create<T>);
            routeGroupBuilder.MapPut("/update/{id}", Update<T>);
            routeGroupBuilder.MapDelete("/delete/{id}", Delete<T>);
        }

        static partial void GetAll<T>([FromServices] <#= db.GetType().Name #> dbContext);
        static partial void Get<T>(int id, [FromServices] <#= db.GetType().Name #> dbContext);
        static partial void Create<T>([FromBody] T entity);
        static partial void Update<T>(int id, [FromBody] T entity);
        static partial void Delete<T>(int id, [FromServices] <#= db.GetType().Name #> dbContext);

    }

}